<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 计算机技术 | 人間夜行]]></title>
  <link href="https://elephantus.moe/blog/categories/ji-suan-ji-ji-zhu/atom.xml" rel="self"/>
  <link href="https://elephantus.moe/"/>
  <updated>2016-08-30T23:23:37+08:00</updated>
  <id>https://elephantus.moe/</id>
  <author>
    <name><![CDATA[人間夜行]]></name>
    <email><![CDATA[ich@elephantus.moe]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[备份 VPS 至 Dropbox]]></title>
    <link href="https://elephantus.moe/blog/backup-vps-to-dropbox/"/>
    <updated>2016-04-19T13:54:57+08:00</updated>
    <id>https://elephantus.moe/blog/backup-vps-to-dropbox</id>
    <content type="html"><![CDATA[<p>偶然想起自己的机器曾经丢失过数据，而那次仅仅是因为没有做一些基本的备份，可见备份数据确实是必须的。主机商已经提供了基本的快照的方法，虽然暂时不对这些备份收费，但每次都备份整台机器数据量未免过于庞大。此外，我还希望自己能够灵活查看备份里的内容，储存在某个私有的云空间里是再合适不过了。由于机器本身在国外，爬梯对我而言还算轻松，使用有着良好技术支持的 Dropbox 是再合适不过了。（喜感）<!--more--></p>

<p>我的基本想法是，写一个 bash 脚本，用 cron 定时运行它。在脚本中使用 tar 打包需要备份的文件，然后用一个特别方便的第三方小程序 <a href="https://github.com/andreafabrizi/Dropbox-Uploader/">Dropbox-Uploader</a> 把备份推上去即可。使用这个脚本需要在 Dropbox 创建一个 App 取得相应的 Key，具体可以看上述项目的说明和 Dropbox 的官方文档。如果你还没有 Dropbox 的账户，你可以点击 <a href="https://db.tt/ok8FuQ3e">这个链接</a> 来注册，从这个渠道你和我都可以免费获得额外的 500MB 储存空间。</p>

<p>以下是我脚本的内容，仅供参考，具体的文件夹肯定是要你自己调整的。</p>

<pre><code class="bash">bak_dir="/home/yourname/backup"
bak_time=`date +%F-%H%M%S`
tar -zcvf $bak_dir/home-$bak_time.tar.gz -X /home/yourname/backup_exclude_list /home
/home/yourname/dropbox_uploader.sh upload $bak_dir/* /
rm $bak_dir/*
</code></pre>

<p>有几个点需要注意。所谓 <code>bak_dir</code> 是一个专用的文件夹，每次用来备份后都会清空。<code>dropbox_uploader.sh</code> 是从前述项目中获取的，使用前需要单独运行一次，以做好设置。<code>backup_exclude_list</code> 是一个纯文本文件，其中每行为一个需要排除在压缩包外的文件的路径，之所以单独做一个列表是为了便于分开管理。在实际运行前最好先测试一下做出来的压缩包会不会太大，如果有大而不必要的东西最好事先排除，免得浪费空间和流量。</p>

<p>最后祝您，服务器平安，再见！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[出于某些原因移动了站点]]></title>
    <link href="https://elephantus.moe/blog/moved-the-site-to-somewhere-else/"/>
    <updated>2016-03-10T19:53:02+08:00</updated>
    <id>https://elephantus.moe/blog/moved-the-site-to-somewhere-else</id>
    <content type="html"><![CDATA[<p>之前提到过，作为静态页面的本站是由 GitHub Pages 提供托管服务的。这样做的好处很明显，可以节省自己维护的成本，但劣势也同样存在。</p>

<p>今天偶然发现，百度无论如何都无法收录我的新版站点，经调查，乃是 GitHub 阻止百度爬虫之故。为了避免访问量的损失，以及获得自己个性化配置站点功能的条件，我决定把网站放到自己一台独立的机器上。虽然会加速消耗一定的流量，但好在基本都是静态页面，而且有 CDN 的帮助，应该能减少相当一部分负担。此外，由于换了 DNS 服务，原来的提供的奇怪 SSL 干脆放弃，直接申请一个独立的安在服务器上，目前感觉还不错。<!--more--></p>

<p>自然，我们要使用优雅的方式（虽然还是很蠢），Github Webhooks 的功能得以使用。除了 Github 的一个奇怪之处（或许以后有机会再介绍），基本上整个流程写下来还是顺利的。唯独困扰我许久的问题竟然是一个权限问题，暂且在此记录下来。</p>

<p>我喜欢 Python，所以用它来写 CGI，中间打算调用一下 <code>git pull</code>，然而每次都报错。通过 <code>os.system()</code> 得到的退出码是 256。一般情况，退出码的范围是 0~255，这个 256 就很奇怪，后来发现这是由 Python 特别转换过得到的，对应的实际退出码是 1。这样便明确了错误原因是没有权限。我们（我当时不）知道，网页服务器的权限是很低的，所以要把相应要处理的文件的组设置为 <code>www-data</code> 并给足权限才可以使用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[导入豆瓣 RSS 至 Octopress]]></title>
    <link href="https://elephantus.moe/blog/import-douban-rss-into-octopress/"/>
    <updated>2016-02-14T14:14:30+08:00</updated>
    <id>https://elephantus.moe/blog/import-douban-rss-into-octopress</id>
    <content type="html"><![CDATA[<p>大家也许已经熟悉了本站最近的运作风格，即发表的文章中有许多来自我在 <a href="http://www.douban.com/people/elephantus/">豆瓣</a> 上的短评。之前在使用 WordPress 的时候，我使用了一个插件来导入 RSS 文件，虽然能用，但是并不稳定。<!-- more --></p>

<p>如今我使用了 Octopress，这就意味着如果还要做这样一件事，就必须自己动手写一些东西了。非常幸运，这件事情可以还原为<strong>从 RSS 迁移博客</strong>，简单搜索便得到了 <a href="http://import.jekyllrb.com/docs/rss/">官方指南</a>。由于避免重复劳动是美德，我便写了如下脚本放在 Octopress 目录下新建的 <code>douban</code> 文件夹中。</p>

<p>使用前除了注意脚本位置外，还应更改你所需的 URL 等信息，另外如果是第一次使用，可能还需要运行 <code>gem install jekyll-import</code> 安装相应依赖。</p>

<hr />

<p>2016-02-22 更新</p>

<p>被友人刺激，我下决心改善一下本站 https 崩掉的情况。除了那个令人束手无策的评论框，想来大概也就是豆瓣的问题。本想做个查找替换，却无意间发现 RSS 文件本身如果用 https 调用，则里面的资源也都会相应改变。这下只要稍作修改，便一劳永逸。当然以前发布了的还是要手动改。</p>

<p>仔细看发现 http 版的 RSS 中豆瓣的图片资源有两类位置，其一类似于 <code>imgX.douban.com</code>，其二 <code>imgX.doubanio.com</code>，<code>X</code> 是一个数字。其中后者可以直接支持 https。而在 https 版的 RSS 中，所有资源都是后者形式。图片文件名虽然相同，但服务器的对应关系（主要是那个数字）我尚不明确，欢迎各位讨论。我觉得说不定豆瓣也要开始做全站 https 化了呢。</p>

<p>总之，下方代码也作出更新。</p>

<p><div class="highlight"><pre><code class="language-bash" data-lang="bash">&lt;/p&gt;

&lt;h1&gt;!/bin/bash&lt;/h1&gt;

&lt;h1&gt;get_douban.sh&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;This script gets <span class="m">10</span> latest items in your collection in douban.com via its RSS file offered, and converts them to octopress posts.&lt;/h1&gt;

&lt;h1&gt;This script works in a subdirectory <span class="o">(</span>you can create a new one<span class="o">)</span> which has the same position as the directory <span class="p">&amp;</span>lsquo<span class="p">;</span><span class="nb">source</span><span class="p">&amp;</span>rsquo<span class="p">;</span>.&lt;/h1&gt;

&lt;h1&gt;Before you run this, make sure that <span class="p">&amp;</span>lsquo<span class="p">;</span>jekyll-import<span class="p">&amp;</span>rsquo<span class="p">;</span> is installed by gem.&lt;/h1&gt;

&lt;h1&gt;You must change the URL below to your own feed. You can also customize the category name.&lt;/h1&gt;

&lt;h1&gt;Change the URL below!&lt;/h1&gt;

&lt;p&gt;wget &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://www.douban.com/feed/people/elephantus/interests&quot;</span>&gt;https://www.douban.com/feed/people/elephantus/interests&lt;/a&gt; -O douban.xml&lt;/p&gt;

&lt;p&gt;ruby -rubygems -e <span class="p">&amp;</span>lsquo<span class="p">;</span>require <span class="p">&amp;</span>ldquo<span class="p">;</span>jekyll-import<span class="p">&amp;</span>rdquo<span class="p">;;</span>
    JekyllImport::Importers::RSS.run<span class="o">({</span>
      <span class="p">&amp;</span>ldquo<span class="p">;</span><span class="nb">source</span><span class="p">&amp;</span>rdquo<span class="p">;</span> <span class="o">=</span>&gt; <span class="p">&amp;</span>ldquo<span class="p">;</span>douban.xml<span class="p">&amp;</span>rdquo<span class="p">;</span>
    <span class="o">})</span><span class="p">&amp;</span>rsquo<span class="p">;</span>&lt;/p&gt;

&lt;p&gt;for f in ./_posts/*
<span class="k">do</span>
    <span class="c"># Maybe change this line. Check &amp;lsquo;man sed&amp;rsquo; to know more about this.</span>
    sed -i <span class="p">&amp;</span>lsquo<span class="p">;</span><span class="m">3</span> acategories:<span class="se">\n</span>-<span class="se">\ </span>豆瓣收藏<span class="se">\n</span>published:<span class="se">\ </span><span class="nb">true</span><span class="se">\n</span>comments:<span class="se">\ </span><span class="nb">true</span><span class="p">&amp;</span>rsquo<span class="p">;</span> <span class="nv">$f</span>
<span class="k">done</span>&lt;/p&gt;

&lt;p&gt;mv -nv ./&lt;em&gt;posts/* ../source/&lt;/em&gt;posts/
rm ./_posts/*</code></pre></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu连接北外新版无线网教程]]></title>
    <link href="https://elephantus.moe/blog/ubuntu%E8%BF%9E%E6%8E%A5%E5%8C%97%E5%A4%96%E6%96%B0%E7%89%88%E6%97%A0%E7%BA%BF%E7%BD%91%E6%95%99%E7%A8%8B/"/>
    <updated>2015-11-17T00:00:00+08:00</updated>
    <id>https://elephantus.moe/blog/ubuntu连接北外新版无线网教程</id>
    <content type="html"><![CDATA[<p>2015年11月，我们学校（北京外国语大学）在全校范围内更新了一整套无线网系统，从此告别无加密的危险网络。</p>




<p>原来的认证方式是经典的连接后通过网页确认用户名密码的两步认证设计。这一设计在校内经常断线的环境下体验不佳，经常用到一半就需要判断是否需要断开重连，或者开个任意网页重新认证。为避免麻烦，许多人选择了有线并加装路由器的方式。这种方式固然有其额外的好处，但晚上断电后便无法使用。一种新的方式实际上还是需要的。<!--more--></p>




<p>新版的无线网（指BFSU和BFSU Secure，BFSU Web仍然是原来网页认证方式）提供了wpa企业级加密，使用受保护的EAP（PEAP）认证方式，MSCHAPv2内部认证，其优越性不言而喻。虽然学校针对各个主要平台（Windows PC、Mac OS、iOS、Android）对于如何连接网络有着详细教程（因为似乎没有固定链接，所以详见数字北外），但是并没有Linux用户所需要的版本，而且事实上整个流程对于Linux用户而言并不是很友好。这种网络不能自动识别，因此需要手动配置。方法如图：</p>




<p><a href="http://koccn.net/wordpress/wp-content/uploads/2015/11/2015-11-17-212556屏幕截图.png"><img class="alignnone wp-image-1161 size-full" src="http://koccn.net/wordpress/wp-content/uploads/2015/11/2015-11-17-212556屏幕截图.png" alt="配置教程" width="480" height="518" /></a></p>




<p>主要应当确认“认证”以及“内部认证”，“匿名身份”为空，“用户名”“密码”就是曾经用于登录的帐号所用，证书的问题忽略即可。</p>




<p>然而问题是无线网信号还是很差。反正出门基本就不用无线了，室内就用路由器，日子照样好好过。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的行为艺术]]></title>
    <link href="https://elephantus.moe/blog/%E6%88%91%E7%9A%84%E8%A1%8C%E4%B8%BA%E8%89%BA%E6%9C%AF/"/>
    <updated>2015-04-06T00:00:00+08:00</updated>
    <id>https://elephantus.moe/blog/我的行为艺术</id>
    <content type="html"><![CDATA[<p>我用假文制作了一个看似有内容的站点：<a title="人间夜行的行为艺术" href="http://art.koccn.net" target="_blank">人间夜行的行为艺术</a>。</p>




<p>大家可以通过<a title="人间夜行的行为艺术" href="http://art.koccn.net" target="_blank">art.koccn.net</a>或<a title="人间夜行的行为艺术" href="http://art.koccn.net" target="_blank">art.elephantus.tk</a>来访问。</p>




<p>其不能称内容的内容来源于 <a title="MoreText.js" href="http://more.handlino.com/?corpus=xuzhimo" target="_blank">MoreText.js: 一用就愛上的中文假文產生器</a>。当然，语料库还是徐志摩的比较好看。</p>

]]></content>
  </entry>
  
</feed>
